doctype html
head
  meta(charset='UTF-8')
  // <meta name="viewport" content="width=device-width, initial-scale=1.0">
  meta(name='viewport' content='width=device-width, height=device-height, initial-scale=1.0, minimum-scale=0.0, maximum-scale=1, user-scalable=no')
  link(href='https://fonts.googleapis.com/css?family=Poppins' rel='stylesheet')
  style.
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
    }
    /* Firefox */
    input[type=number] {
    -moz-appearance: textfield;
    }
    .form input {
    outline: 0;
    background: rgb(243, 216, 189);
    width: 100%;
    border: 0;
    margin: 0 0 15px;
    padding: 15px;
    box-sizing: border-box;
    font-size: 16px;
    }
    select {
    outline: 0;
    background: rgb(243, 216, 189);
    width: 100%;
    border: 0;
    margin: 0 0 15px;
    padding: 15px;
    box-sizing: border-box;
    font-size: 16px;
    }
    .custom-select select {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image:
    linear-gradient(45deg, transparent 50%, black 50%),
    linear-gradient(135deg, black 50%, transparent 50%);
    background-position:
    calc(100% - 22px) calc(1em + 3px),
    calc(100% - 7px) calc(1em + 3px);
    background-size:
    15px 15px,
    15px 15px,
    10px 1.5em;
    background-repeat: no-repeat;
    }
    .custom-select select:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 #000;
    }
    .form {
    position: relative;
    z-index: 1;
    max-width: 360px;
    margin: 0 auto 100px;
    padding: 45px;
    text-align: center;
    }
    ::placeholder {
    color: black;
    opacity: 1;
    font-weight: 550;
    /* Firefox */
    }
    .tab {
    display: none;
    }
    .form button {
    text-transform: uppercase;
    font-family: 'Poppins';
    outline: 0;
    background: rgb(243, 91, 90);
    border: 2px solid rgb(243, 91, 90);
    border-radius: 5px;
    width: 100%;
    padding: 15px;
    color: #FFFFFF;
    margin-top: 20;
    font-size: 14px;
    -webkit-transition: all 0.3 ease;
    transition: all 0.3 ease;
    cursor: pointer;
    }
    .header-input {
    text-align: left;
    font-weight: bold;
    }
    .subheader-input {
    text-align: left;
    }
    .text-upper {
    text-align: left;
    padding: 0 40 5 40
    }
    .text-lower {
    text-align: left;
    padding: 0 0 40 40
    }
    body {
    font-family: 'Poppins';
    background-color: bisque;
    font-size: 22px;
    margin: 0;
    /* line-height: inherit; */
    height: 100%;
    box-sizing: border-box;
    display: block;
    }
    html {
    max-width: 100%;
    height: 100vh;
    box-sizing: border-box;
    }
  script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js')
.root(style='min-height: 100vh; box-sizing: border-box; margin:0 auto; border: 1 solid black;')
  .page(style='max-width: 37.5rem;min-height: 100vh;margin:0 auto;border: 1px solid transparent; ')
    form.login-form
      .tab.form
        .text-upper
          | Halo,
        div(style='text-align:center ')
          .header-input
            | Kotamadya/Kabupaten
          .custom-select
            select#kotkab
              option(value='KOTAMADYA') Kotamadya
              option(value='KABUPATEN') Kabupaten
          .header-input
            | Kecamatan
          .custom-select
            select#kecamatan
              option(value='')
          .header-input
            | Kelurahan
          .custom-select
            select#kelurahan
              option(value='')
          .header-input
            | No TPS
          .custom-select
            select#tps
              option(value='')
          .header-input
            | Jumlah Daftar Pemilih Tetap
          input#total_dpt(type='number')
          .header-input
            | Jumlah DPT Tambahan
          input#total_dpt_tambahan(type='number')
          .header-input
            | Jumlah DPT Khusus
          input#total_dpt_khusus(type='number')
          .header-input
            | Jumlah DPT Hadir
          input#total_dpt_datang(type='number')
          .header-input
            | Jumlah Suara Tidak Sah
          input#suara_tidak_sah(type='number')
      .tab.form
        .text-upper
          b Hasil Pemilihan Presiden
        .text-lower
          | Masukkan angka hasil pemilihan pada
          | masing-masing kolom.
        div(style='text-align:center ')
          .subheader-input
            | Paslon 1
          .subheader-input
            | Anies Baswedan - Muhaimin Iskandar
          input#paslon_1(type='number')
          .subheader-input
            | Paslon 2
          .subheader-input
            | Prabowo Subianto - Gibran Rakabuming
          input#paslon_2(type='number')
          .subheader-input
            | Paslon 3
          .subheader-input
            | Ganjar Pranowo - Mahfud MD
          input#paslon_3(type='number')
      .form
        div(style='margin-bottom: 15px;' ) 
          i#warningMsg(style='color:red;display:none;font-size:20px') Data Tidak boleh ada yang kosong
        button#prevBtn(style='margin-bottom: 15px;' type='button' onclick='nextPrev(-1)') Previous
        button#nextBtn(type='button' onclick='nextPrev(1)') Next
    #submisi.submisi(style='text-align: center; display: none;')
      | Terima kasih, hasil perhitungan telah masuk dalam database
      br
      br
      |                 Silahkan klik 
      a(href='/') DISINI
      |  untuk kembali ke halaman awal dan
      |                 memasukkan data dari TPS lainnya.
script(src='https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js')
script(type='text/javascript').
  var check = true

  $(document).ready(function () {
  axios.get('!{host}/api/kecamatan',{
  params: {
  type: document.getElementById("kotkab").value,
  }
  })
  .then(function (response) {
  var select = document.getElementById("kecamatan");
  for (item of response.data) {
  var newOption = document.createElement('option');
  newOption.value = item.id;
  newOption.innerHTML = item.nama;
  select.appendChild(newOption);
  }
  });
  });
  $('#kotkab').change(function () {
  document.querySelectorAll('#kecamatan option').forEach(option => option.remove())
  document.querySelectorAll('#kelurahan option').forEach(option => option.remove())
  document.querySelectorAll('#tps option').forEach(option => option.remove())
  axios.get('!{host}/api/kecamatan', {
  params: {
  type: document.getElementById("kotkab").value,
  },
  })
  .then(function (response) {
  var select = document.getElementById("kecamatan");
  var firstOption = document.createElement('option');
  firstOption.value = '';
  select.appendChild(firstOption);
  for (item of response.data) {
  var newOption = document.createElement('option');
  newOption.value = item.id;
  newOption.innerHTML = item.nama;
  select.appendChild(newOption);
  }
  });
  });

  $('#kecamatan').change(function () {
  document.querySelectorAll('#kelurahan option').forEach(option => option.remove())
  document.querySelectorAll('#tps option').forEach(option => option.remove())
  axios.get('!{host}/api/kelurahan', {
  params: {
  idKecamatan: $(this).val(),
  },
  })
  .then(function (response) {
  var select = document.getElementById("kelurahan");
  var firstOption = document.createElement('option');
  firstOption.value = '';
  select.appendChild(firstOption);
  for (item of response.data) {
  var newOption = document.createElement('option');
  newOption.value = item.id;
  newOption.innerHTML = item.nama;
  select.appendChild(newOption);
  }
  });
  });
  $('#kelurahan').change(function () {
  document.querySelectorAll('#tps option').forEach(option => option.remove())
  axios.get('!{host}/api/tps', {
  params: {
  idKelurahan: $(this).val(),
  },
  })
  .then(function (response) {
  var select = document.getElementById("tps");
  var firstOption = document.createElement('option');
  firstOption.value = '';
  select.appendChild(firstOption);
  for (item of response.data) {
  var newOption = document.createElement('option');
  newOption.value = item.id;
  newOption.innerHTML = item.alamat;
  select.appendChild(newOption);
  }
  });
  });
  var currentTab = 0; // Current tab is set to be the first tab (0)
  showTab(currentTab); // Display the current tab
  function showTab(n) {
  // This function will display the specified tab of the form...
  var x = document.getElementsByClassName("tab");
  var kecValue = document.getElementById("kecamatan").value


  x[n].style.display = "block";
  //... and fix the Previous/Next buttons:
  if (n == 0) {
  document.getElementById("prevBtn").style.display = "none";
  } else {
  document.getElementById("prevBtn").style.display = "inline";
  // add validator function

  }
  if (n == (x.length - 1)) {
  document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
  document.getElementById("nextBtn").innerHTML = "Next";
  }
  //... and run a function that will display the correct step indicator:
  // fixStepIndicator(n)
  }
  function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false
      valid = false;
    }
  }
  return valid; // return the valid status
  }

  function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
    if (n == 1 && !validateForm() ){
      document.getElementById("warningMsg").style.display="block";
      return false;
    }else{
      document.getElementById("warningMsg").style.display="none";
    }
    var total_paslon = parseInt(document.getElementById("paslon_1").value) + parseInt(document.getElementById("paslon_2").value) + parseInt(document.getElementById("paslon_3").value) 
    var sah = parseInt(document.getElementById("total_dpt_datang").value) - parseInt(document.getElementById("suara_tidak_sah").value)
    if (total_paslon < sah || total_paslon > sah){
      check = false
    }else{
      check=true
    }
    if (!check && n == 1 && currentTab==1){
      document.getElementById("warningMsg").style.display="block";
      document.getElementById("warningMsg").innerHTML="Data hasil pemilihan yang anda masukkan tidak bisa disimpan karena jumlah yang anda masukkan kurang dari atau lebih banyak dari Jumlah Total Suara Sah. Harap periksa kembali angka yang anda masukkan atau periksa kembali jumlah suara sah di halaman formulir sebelumnya";
      return false
    }
    if (!check && n == -1 && currentTab==1){
      document.getElementById("warningMsg").style.display="none";
      check=true

    }

  // if (n == 1 ) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form...
  if (currentTab >= x.length) {
    if (check){
      axios.post('!{host}/api/capres',
      {
      paslon_1: parseInt(document.getElementById("paslon_1").value),
      paslon_2: parseInt(document.getElementById("paslon_2").value),
      paslon_3: parseInt(document.getElementById("paslon_3").value),
      suara_sah: sah,
      total_dpt: parseInt(document.getElementById("total_dpt").value), 
      total_dpt_tambahan: parseInt(document.getElementById("total_dpt_tambahan").value), 
      total_dpt_khusus: parseInt(document.getElementById("total_dpt_khusus").value), 
      total_dpt_datang: parseInt(document.getElementById("total_dpt_datang").value), 
      suara_tidak_sah: parseInt(document.getElementById("suara_tidak_sah").value), 
      tps_id: parseInt(document.getElementById("tps").value),
      nrp: '!{nrp}'
      })
    .then(function (response) {

    });
    }


  // ... the form gets submitted:
  document.getElementById("nextBtn").style.display = "none";
  document.getElementById("prevBtn").style.display = "none";
  document.getElementById("submisi").style.display = "block"
  return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
  }

